{"version":3,"sources":["routes/About.js","components/Movies.js","routes/Home.js","routes/MovieDetail.js","components/Navigation.js","App.js","index.js"],"names":["About","props","console","log","Movies","id","year","title","summary","poster","genres","to","pathname","state","className","src","alt","map","genre","index","key","slice","Home","useState","isLoading","movies","data","setData","didMount","React","useRef","getMovies","a","axios","get","useEffect","current","movie","medium_cover_image","MovieDetail","redirect","setRedirect","undefined","location","Navigation","App","path","exact","component","ReactDOM","render","document","getElementById"],"mappings":"+OAOeA,MALf,SAAeC,GAEb,OADAC,QAAQC,IAAIF,GACL,uH,wDCyCMG,MAxCf,YAA4D,IAA3CC,EAA0C,EAA1CA,GAAIC,EAAsC,EAAtCA,KAAMC,EAAgC,EAAhCA,MAAOC,EAAyB,EAAzBA,QAASC,EAAgB,EAAhBA,OAAQC,EAAQ,EAARA,OACjD,OACE,kBAAC,IAAD,CACEC,GAAI,CACFC,SAAS,UAAD,OAAYP,GACpBQ,MAAO,CACLP,OACAC,QACAC,UACAC,SACAC,YAIJ,yBAAKI,UAAU,SACb,yBAAKC,IAAKN,EAAQO,IAAKT,EAAOA,MAAOA,IACrC,yBAAKO,UAAU,iBACb,wBAAIA,UAAU,eAAeP,GAC7B,wBAAIO,UAAU,cAAcR,GAC5B,wBAAIQ,UAAU,UACXJ,EAAOO,KAAI,SAACC,EAAOC,GAAR,OACT,wBAAIC,IAAKD,EAAOL,UAAU,gBAAgBI,OAG/C,uBAAGJ,UAAU,iBAAiBN,EAAQa,MAAM,EAAG,KAA/C,W,MC0BKC,MAlDf,WAAiB,IAAD,EACUC,mBAAS,CAC/BC,WAAW,EACXC,OAAQ,KAHI,mBACPC,EADO,KACDC,EADC,KAMRC,EAAWC,IAAMC,QAAO,GAE1BC,EAAS,uCAAG,8BAAAC,EAAA,sEAKJC,IAAMC,IAAI,0DALN,gBAGHT,EAHG,EAEZC,KACEA,KAAOD,OAGXE,EAAQ,CAAEH,WAAW,EAAOC,WANd,2CAAH,qDAiBb,OARAU,qBAAU,WAGR,OAFAJ,IAEO,WACLH,EAASQ,SAAU,KAEpB,IAGD,6BAAStB,UAAU,aAChBY,EAAKF,UACJ,yBAAKV,UAAU,UACX,0BAAMA,UAAU,gBAAhB,eAGJ,yBAAKA,UAAU,UACZY,EAAKD,OAAOR,KAAI,SAAAoB,GAAK,OACpB,kBAAC,EAAD,CACEjB,IAAKiB,EAAMhC,GACXA,GAAIgC,EAAMhC,GACVC,KAAM+B,EAAM/B,KACZC,MAAO8B,EAAM9B,MACbC,QAAS6B,EAAM7B,QACfC,OAAQ4B,EAAMC,mBACd5B,OAAQ2B,EAAM3B,eCTb6B,MAjCf,SAAqBtC,GAAO,IAAD,EAEOsB,oBAAS,GAFhB,mBAElBiB,EAFkB,KAERC,EAFQ,KAUzB,OANAN,qBAAU,gBACqBO,IAAzBzC,EAAM0C,SAAS9B,OACjB4B,GAAY,KAEb,CAACxC,EAAM0C,SAAS9B,QAEf2B,EACM,kBAAC,IAAD,CAAU7B,GAAG,MAKjBV,EAAM0C,SAAS9B,MAEf,kBAAC,EAAD,CACEO,IAAKnB,EAAM0C,SAAS9B,MAAMN,MAC1BD,KAAML,EAAM0C,SAAS9B,MAAMP,KAC3BC,MAAON,EAAM0C,SAAS9B,MAAMN,MAC5BC,QAASP,EAAM0C,SAAS9B,MAAML,QAC9BC,OAAQR,EAAM0C,SAAS9B,MAAMJ,OAC7BC,OAAQT,EAAM0C,SAAS9B,MAAMH,SAI1B,MCpBEkC,MATf,WACE,OAAO,6BAGL,kBAAC,IAAD,CAAMjC,GAAG,KAAT,QACA,kBAAC,IAAD,CAAMA,GAAG,UAAT,WCYWkC,MAbf,WACE,OAAO,kBAAC,IAAD,KAGL,kBAAC,EAAD,MAGA,kBAAC,IAAD,CAAOC,KAAK,IAAIC,OAAO,EAAMC,UAAW1B,IACxC,kBAAC,IAAD,CAAOwB,KAAK,SAASE,UAAWhD,IAChC,kBAAC,IAAD,CAAO8C,KAAK,aAAaE,UAAWT,MCVxCU,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.db22b39a.chunk.js","sourcesContent":["import React from \"react\";\n\nfunction About(props){\n  console.log(props);\n  return <span>About this page: This is a movie app that provides information about various movies.</span>;\n}\n\nexport default About;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\nimport \"./Movies.css\";\n\nfunction Movies({id, year, title, summary, poster, genres}){\n  return (\n    <Link\n      to={{\n        pathname: `/movie/${id}`,\n        state: {\n          year,\n          title,\n          summary,\n          poster,\n          genres\n        }\n      }}\n    >\n      <div className=\"movie\">\n        <img src={poster} alt={title} title={title} />\n        <div className=\"movie_txtdata\">\n          <h3 className=\"movie_title\">{title}</h3>\n          <h5 className=\"movie_year\">{year}</h5>\n          <ul className=\"genres\">\n            {genres.map((genre, index)=>\n               <li key={index} className=\"genres_genre\">{genre}</li>\n            )}\n          </ul>\n          <p className=\"movie_summary\">{summary.slice(0, 140)}...</p>\n        </div>\n      </div>\n    </Link>\n  );\n}\n\nMovies.propTypes = {\n  id: PropTypes.number,\n  year: PropTypes.number.isRequired,\n  title: PropTypes.string.isRequired,\n  summary: PropTypes.string.isRequired,\n  poster: PropTypes.string.isRequired,\n  genres: PropTypes.arrayOf(PropTypes.string).isRequired\n}\n\nexport default Movies;\n","import React, { useState, useEffect } from 'react';\nimport axios from \"axios\";\nimport Movies from \"../components/Movies\";\nimport \"./Home.css\";\n\nfunction Home() {\n  const [data, setData] = useState({\n    isLoading: true,\n    movies: []\n  });\n\n  const didMount = React.useRef(false);\n\n  var getMovies = async () => {\n    const {\n      data: {\n        data: {movies}\n      }\n    } = await axios.get(\"https://yts-proxy.now.sh/list_movies.json?sort_by=year\");\n    setData({ isLoading: false, movies });\n  }\n\n  useEffect(() => {\n    getMovies();\n\n    return () => {\n      didMount.current = true;\n    };\n  }, []);\n\n  return (\n    <section className=\"container\">\n      {data.isLoading ? (\n        <div className=\"loader\">\n            <span className=\"loader__text\">Loading...</span>\n        </div>\n      ) : (\n        <div className=\"movies\">\n          {data.movies.map(movie => (\n            <Movies\n              key={movie.id}\n              id={movie.id}\n              year={movie.year}\n              title={movie.title}\n              summary={movie.summary}\n              poster={movie.medium_cover_image}\n              genres={movie.genres}\n            />\n          ))}\n        </div>\n      )}\n    </section>\n  );\n}\n\nexport default Home;\n","import React, { useState, useEffect } from \"react\";\nimport { Redirect } from \"react-router-dom\";\nimport Movies from \"../components/Movies\";\n\nfunction MovieDetail(props){\n\n  const [redirect, setRedirect] = useState(false);\n\n  useEffect(() => {\n    if (props.location.state === undefined) {\n      setRedirect(true);\n    }\n  }, [props.location.state]);\n\n  if (redirect){\n    return  <Redirect to=\"/\" />;\n  } else {\n    // Since the below rendering happens first before it gets props.location,\n    // we need to return null for the first time, and then when it gets props,\n    // return the contents\n    if (props.location.state){\n      return (\n        <Movies\n          key={props.location.state.title}\n          year={props.location.state.year}\n          title={props.location.state.title}\n          summary={props.location.state.summary}\n          poster={props.location.state.poster}\n          genres={props.location.state.genres}\n        />\n      )\n    } else {\n      return null;\n    }\n  }\n}\n\nexport default MovieDetail;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nfunction Navigation(){\n  return <div>\n  {/* We use Link to avoid html refresh the page when click the menu*/}\n  {/* We cannot use Link outside the router (in this case HashRouter)*/}\n    <Link to=\"/\">Home</Link>\n    <Link to=\"/about\">About</Link>\n  </div>\n}\n\nexport default Navigation;\n","import React from \"react\";\nimport { HashRouter, Route } from \"react-router-dom\";\nimport About from \"./routes/About\";\nimport Home from \"./routes/Home\";\nimport MovieDetail from \"./routes/MovieDetail\";\nimport Navigation from \"./components/Navigation\";\n\nfunction App(){\n  return <HashRouter>\n    {/* You don't need to put everything inside the router, but */}\n    {/* We need to use Link inside the Router! */}\n    <Navigation />\n    {/* If I go to certain path, then show corresponding component.*/}\n    {/* Every route in the router get some props by default */}\n    <Route path=\"/\" exact={true} component={Home} />\n    <Route path=\"/about\" component={About} />\n    <Route path=\"/movie/:id\" component={MovieDetail} />\n  </HashRouter>;\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\n// components: functions that return html.\n// can render only one component\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}